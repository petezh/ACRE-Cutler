png("results/gdp_fig.png")
# create graph
GDP_fig <- ggplot(data = GDP_so, aes(x = Year)) +
geom_line(aes(y = Pre.Covid), color = "blue") +
geom_line(aes(y = Post.Covid), color="orangered") +
labs(y = "Real GDP in $ Billions",
x = "Year" ,
title = "Change in GDP",
subtitle = "January 2020 and July 2020 GBO Projections"
)
GDP_fig
dev.off()
# open deaths fig output
png("results/deaths_fig.png")
# create graph
deaths_fig <- ggplot(data = deaths_so, aes(x = End.Date, y = COVID.19.Deaths)) +
geom_line(color='blue') +
labs(y = "Weekly COVID-19 Deaths",
x = "Month" ,
title = "Number of COVID-19 Deaths",
subtitle = "Based on estimates from the CDC"
)
deaths_fig
dev.off()
#################
# POLICY ESTIMATES
#################
# GDP estimate
GDP_main_pe <- sum(GDP_so$Pre.Covid-GDP_so$Post.Covid)*1000000000
# mortality estimate
deaths_main_pe <- (currentdeaths_so + 52*weeklydeaths_so) * excessdeaths_so * VSL_so
# impairments estimate
impairments_main_pe <- sum(impairments_so$Impairments) * futureratio_so * complications_so * impQOLloss_so * VSL_so
# mental health estimate
anx_dep_2019 <- mentalhealth_so[which(mentalhealth_so$Indicator == 'Symptoms of anxiety disorder and/or depressive disorder' & mentalhealth_so$Time.Period == '2019'),]$Value
anx_dep_2020 <- mentalhealth_so[which(mentalhealth_so$Indicator == 'Symptoms of Anxiety Disorder or Depressive Disorder' & mentalhealth_so$Time.Period == 'July 16 - July 21'),]$Value
mentalhealth_main_pe <- (anx_dep_2020 - anx_dep_2019) / 100 * adultpop_so * mhQOLloss_so * VLY_so
# sum
total_main_pe <- GDP_main_pe + deaths_main_pe + impairments_main_pe + mentalhealth_main_pe
##########
# ALT SPECS
##########
# 1. Change Imapairment Ratio
futureratio_alt1 = currentdeaths_so/(52*weeklydeaths_so)
impairments_alt1_pe <- sum(impairments_so$Impairments) * futureratio_alt1 * complications_so * impQOLloss_so * VSL_so
# 1. Update Deaths Data
# calculate current deaths from new data
currentdeaths_alt2 = sum(deaths_so$COVID.19.Deaths)
# update impairments future ratio
futureratio_alt2 = currentdeaths_alt2/(52*weeklydeaths_so)
# update deaths estimate
deaths_alt2_pe <- (currentdeaths_alt_so + 52*weeklydeaths_so) * excessdeaths_so * VSL_so
impairments_alt2_pe <- sum(impairments_so$Impairments) * futureratio_alt2 * complications_so * impQOLloss_so * VSL_so
########
# TABLE
########
futureratio_alt1
Ratio
futureratio_alt1 = (52*weeklydeaths_so)/currentdeaths_so
impairments_alt1_pe <- sum(impairments_so$Impairments) * futureratio_alt1 * complications_so * impQOLloss_so * VSL_so
# 1. Update Deaths Data
# calculate current deaths from new data
currentdeaths_alt2 = sum(deaths_so$COVID.19.Deaths)
# update impairments future ratio
futureratio_alt2 = (52*weeklydeaths_so)/currentdeaths_alt2
# update deaths estimate
deaths_alt2_pe <- (currentdeaths_alt_so + 52*weeklydeaths_so) * excessdeaths_so * VSL_so
impairments_alt2_pe <- sum(impairments_so$Impairments) * futureratio_alt2 * complications_so * impQOLloss_so * VSL_so
futureratio_alt1
futureratio_alt1 = (52*weeklydeaths_so)/(currentdeaths_so+52*weeklydeaths_so)
impairments_alt1_pe <- sum(impairments_so$Impairments) * futureratio_alt1 * complications_so * impQOLloss_so * VSL_so
# 1. Update Deaths Data
# calculate current deaths from new data
currentdeaths_alt2 = sum(deaths_so$COVID.19.Deaths)
# update impairments future ratio
futureratio_alt2 = (52*weeklydeaths_so)/(currentdeaths_alt2+52*weeklydeaths_so)
# update deaths estimate
deaths_alt2_pe <- (currentdeaths_alt_so + 52*weeklydeaths_so) * excessdeaths_so * VSL_so
impairments_alt2_pe <- sum(impairments_so$Impairments) * futureratio_alt2 * complications_so * impQOLloss_so * VSL_so
futureratio_alt1
# 1. Change Imapairment Ratio
futureratio_alt1 = (52*weeklydeaths_so+currentdeaths_so)/currentdeaths_so
impairments_alt1_pe <- sum(impairments_so$Impairments) * futureratio_alt1 * complications_so * impQOLloss_so * VSL_so
# 1. Update Deaths Data
# calculate current deaths from new data
currentdeaths_alt2 = sum(deaths_so$COVID.19.Deaths)
# update impairments future ratio
futureratio_alt2 = (52*weeklydeaths_so+currentdeaths_alt2)/currentdeaths_alt2
# update deaths estimate
deaths_alt2_pe <- (currentdeaths_alt_so + 52*weeklydeaths_so) * excessdeaths_so * VSL_so
futureratio_alt1
futureratio_alt2
# 3. Change Adult Pop
adultpop_alt3 = 250563000
mentalhealth_alt3_pe <- (anx_dep_2020 - anx_dep_2019) / 100 * adultpop_alt3 * mhQOLloss_so * VLY_so
mentalhealth_main_pe
mentalhealth_alt3_pe
results_table <- data.frame("Lost GDP" =   c(GDP_main_pe, NA,
NA) ,
"Premature death" =  c(deaths_main_pe, "results", NA),
"Long-term health impairment" = c(impairments_main_pe, NA,
"results"),
"Mental healh impariment" = c(mentalhealth_main_pe, NA,
"results"),
"Total" = c(mainequation_in, NA, NA),
"Total for a family of 4" = c(total_main_pe, NA, NA),
row.names = c("main", "alt1", "alt2"))
results_table <- data.frame("Lost GDP" =   c(GDP_main_pe, NA,
NA) ,
"Premature death" =  c(deaths_main_pe, "results", NA),
"Long-term health impairment" = c(impairments_main_pe, NA,
"results"),
"Mental healh impariment" = c(mentalhealth_main_pe, NA,
"results"),
"Total" = c(total_main_pe, NA, NA),
"Total for a family of 4" = c(total_main_pe, NA, NA),
row.names = c("main", "alt1", "alt2"))
kable(results_table, caption = "Table Caption") %>%
kable_styling("striped", full_width = F)
# calculate "family of four" ratios
hosuehold_factor = 4/totalpop_so
# based on data
totalpop_so = 328200000
# calculate "family of four" ratios
hosuehold_factor = 4/totalpop_so
hosueholdfactor = 4/totalpop_so
household_main_pe = total_main_pe * hosueholdfactor
household_alt1_pe = total_alt1_pe * hosueholdfactor
household_alt2_pe = total_alt2_pe * hosueholdfactor
household_alt3_pe = total_alt3_pe * hosueholdfactor
total_alt3_pe
hosueholdfactor = 4/totalpop_so
household_main_pe = total_main_pe * hosueholdfactor
household_alt1_pe = total_alt1_pe * hosueholdfactor
household_alt2_pe = total_alt2_pe * hosueholdfactor
household_alt3_pe = total_alt3_pe * hosueholdfactor
# Reproduction of "The COVID-19 Pandemic and the $16 Trillion Virus" by Cutler and Summers
# @author: petezh
#######
# SETUP
#######
# loading required libraries
list.of.packages <- c("ggplot2", "tidyverse", "kableExtra", "here")
new.packages <- list.of.packages[!(list.of.packages %in% installed.packages()[,"Package"])]
if(length(new.packages)) install.packages(new.packages, repos= "https://cran.r-project.org/")
lapply(list.of.packages, library, character.only = TRUE)
#########
# SOURCES
#########
# load GDP projections
GDP_so <- read.csv("data/analysis/projections.csv")
# load COVID deaths data
deaths_so <- read.csv("data/analysis/covid_deaths.csv")
deaths_so$End.Date <- as.Date(deaths_so$End.Date, "%m/%d/%Y")
deaths_so <- subset(deaths_so, End.Date <= as.Date("2020-09-25"))
# load COVID impairment data
impairments_so <- read.csv("data/analysis/impairments.csv")
# load COVID deaths data
mentalhealth_so <- read.csv("data/analysis/mental_health.csv")
# based on estimates
VSL_so <- 7000000
VLY_so <- 100000
# based on research/estimates
currentdeaths_so <- 190076
weeklydeaths_so <- 5000
excessdeaths_so <- 1.38888
# based on estimate
futureratio_so <- 625000/250000
# based on research/estimates
complications_so <- 1/3
impQOLloss_so <- 0.35
mhQOLloss_so <- 0.2
# based on data
totalpop_so = 328200000
adultpop_so = 263000000
#########
# FIGURES
#########
# open GPD fig output
png("results/gdp_fig.png")
# create graph
GDP_fig <- ggplot(data = GDP_so, aes(x = Year)) +
geom_line(aes(y = Pre.Covid), color = "blue") +
geom_line(aes(y = Post.Covid), color="orangered") +
labs(y = "Real GDP in $ Billions",
x = "Year" ,
title = "Change in GDP",
subtitle = "January 2020 and July 2020 GBO Projections"
)
GDP_fig
dev.off()
# open deaths fig output
png("results/deaths_fig.png")
# create graph
deaths_fig <- ggplot(data = deaths_so, aes(x = End.Date, y = COVID.19.Deaths)) +
geom_line(color='blue') +
labs(y = "Weekly COVID-19 Deaths",
x = "Month" ,
title = "Number of COVID-19 Deaths",
subtitle = "Based on estimates from the CDC"
)
deaths_fig
dev.off()
##################
# POLICY ESTIMATES
##################
# GDP estimate
GDP_main_pe <- sum(GDP_so$Pre.Covid-GDP_so$Post.Covid)*1000000000
# mortality estimate
deaths_main_pe <- (currentdeaths_so + 52*weeklydeaths_so) * excessdeaths_so * VSL_so
# impairments estimate
impairments_main_pe <- sum(impairments_so$Impairments) * futureratio_so * complications_so * impQOLloss_so * VSL_so
# mental health estimate
anx_dep_2019 <- mentalhealth_so[which(mentalhealth_so$Indicator == 'Symptoms of anxiety disorder and/or depressive disorder' & mentalhealth_so$Time.Period == '2019'),]$Value
anx_dep_2020 <- mentalhealth_so[which(mentalhealth_so$Indicator == 'Symptoms of Anxiety Disorder or Depressive Disorder' & mentalhealth_so$Time.Period == 'July 16 - July 21'),]$Value
mentalhealth_main_pe <- (anx_dep_2020 - anx_dep_2019) / 100 * adultpop_so * mhQOLloss_so * VLY_so
# sum
total_main_pe <- GDP_main_pe + deaths_main_pe + impairments_main_pe + mentalhealth_main_pe
###########
# ALT SPECS
###########
# 1. Change Impairment Ratio
# use death data to calculate ratio
futureratio_alt1 = (52*weeklydeaths_so+currentdeaths_so)/currentdeaths_so
# recalculate impairments estimate
impairments_alt1_pe <- sum(impairments_so$Impairments) * futureratio_alt1 * complications_so * impQOLloss_so * VSL_so
# recalculate total
total_alt1_pe = GDP_main_pe + deaths_main_pe + impairments_alt1_pe + mentalhealth_main_pe
# 2. Update Deaths Data
# calculate current deaths from new data
currentdeaths_alt2 = sum(deaths_so$COVID.19.Deaths)
# update impairments future ratio
futureratio_alt2 = (52*weeklydeaths_so+currentdeaths_alt2)/currentdeaths_alt2
# recalculate death and impairment estimates
deaths_alt2_pe <- (currentdeaths_alt_so + 52*weeklydeaths_so) * excessdeaths_so * VSL_so
impairments_alt2_pe <- sum(impairments_so$Impairments) * futureratio_alt2 * complications_so * impQOLloss_so * VSL_so
# recalculate total
total_alt2_pe = GDP_main_pe + deaths_alt2_pe + impairments_alt2_pe + mentalhealth_main_pe
# 3. Change Adult Pop
# use new adult pop estimate
adultpop_alt3 = 250563000
# recalculate mental health estimate
mentalhealth_alt3_pe <- (anx_dep_2020 - anx_dep_2019) / 100 * adultpop_alt3 * mhQOLloss_so * VLY_so
total_alt3_pe = GDP_main_pe + deaths_main_pe + impairments_main_pe + mentalhealth_alt3_pe
########
# TABLE
########
# calculate "family of four" ratios
hosueholdfactor = 4/totalpop_so
household_main_pe = total_main_pe * hosueholdfactor
household_alt1_pe = total_alt1_pe * hosueholdfactor
household_alt2_pe = total_alt2_pe * hosueholdfactor
household_alt3_pe = total_alt3_pe * hosueholdfactor
results_table <- data.frame("Lost GDP" =   c(GDP_main_pe, GDP_main_pe, GDP_main_pe, GDP_main_pe),
"Premature death" =  c(deaths_main_pe, deaths_main_pe, deaths_alt2_pe, deaths_main_pe),
"Long-term health impairment" = c(impairments_main_pe, impairments_alt1_pe, impairments_alt2_pe, impairments_main_pe),
"Mental healh impariment" = c(mentalhealth_main_pe, mentalhealth_main_pe, mentalhealth_main_pe, mentalhealth_alt3_pe),
"Total" = c(total_main_pe, total_alt1_pe, total_alt2_pe, total_alt3_pe),
"Total for a family of 4" = c(total_main_pe, NA, NA),
row.names = c("main", "alt1", "alt2"))
kable(results_table, caption = "Table Caption") %>%
kable_styling("striped", full_width = F)
results_table <- data.frame("Lost GDP" =   c(GDP_main_pe, GDP_main_pe, GDP_main_pe, GDP_main_pe),
"Premature death" =  c(deaths_main_pe, deaths_main_pe, deaths_alt2_pe, deaths_main_pe),
"Long-term health impairment" = c(impairments_main_pe, impairments_alt1_pe, impairments_alt2_pe, impairments_main_pe),
"Mental healh impariment" = c(mentalhealth_main_pe, mentalhealth_main_pe, mentalhealth_main_pe, mentalhealth_alt3_pe),
"Total" = c(total_main_pe, total_alt1_pe, total_alt2_pe, total_alt3_pe),
"Total for a family of 4" = c(household_main_pe, household_alt1_pe, household_alt2_pe, household_alt3_pe),
row.names = c("main", "alt1", "alt2", "alt3"))
kable(results_table, caption = "Table Caption") %>%
kable_styling("striped", full_width = F)
GDP_so$Post.Covid[2]
# calculate "percent of GDP" ratios
annualGDP = GDP_so$Post.Covid[2]*1000000000
annualGDP
# calculate "percent of GDP" ratios
annualGDP = GDP_so$Post.Covid[2]*1000000000
GDPprop_main_pe = total_main_pe / annualGDP
GDPprop_alt1_pe = total_alt1_pe / annualGDP
GDPprop_alt2_pe = total_alt2_pe / annualGDP
GDPprop_alt3_pe = total_alt3_pe / annualGDP
results_table <- data.frame("Lost GDP" =   c(GDP_main_pe, GDP_main_pe, GDP_main_pe, GDP_main_pe),
"Premature death" =  c(deaths_main_pe, deaths_main_pe, deaths_alt2_pe, deaths_main_pe),
"Long-term health impairment" = c(impairments_main_pe, impairments_alt1_pe, impairments_alt2_pe, impairments_main_pe),
"Mental healh impariment" = c(mentalhealth_main_pe, mentalhealth_main_pe, mentalhealth_main_pe, mentalhealth_alt3_pe),
"Total" = c(total_main_pe, total_alt1_pe, total_alt2_pe, total_alt3_pe),
"Total for a family of 4" = c(household_main_pe, household_alt1_pe, household_alt2_pe, household_alt3_pe),
"% of Annual GDP" = c(GDPprop_main_pe, GDPprop_alt1_pe, GDPprop_alt2_pe, GDPprop_alt3_pe),
row.names = c("main", "alt1", "alt2", "alt3"))
kable(results_table, caption = "Table Caption") %>%
kable_styling("striped", full_width = F)
kable(results_table, caption = "Table Caption", digits=3) %>%
kable_styling("striped", full_width = F)
kable(results_table, caption = "Table Caption", digits=2)
kable(results_table, caption = "Table Caption", digits=2) %>%
kable_styling("striped", full_width = F)
results_table$Lost.GDP = results_table$Lost.GDP/1000000000
results_table$Premature.death = results_table$Premature.death/1000000000
results_table$Long.term.health.impairment = results_table$Long.term.health.impairment/1000000000
results_table$Mental.healh.impariment = results_table$Mental.healh.impariment/1000000000
results_table$Total = results_table$Total/1000000000
kable(results_table, caption = "Table Caption", digits=2)
kable(results_table, caption = "Table Caption", digits=2) %>%
kable_styling("striped", full_width = F)
results_table <- data.frame("GDP" =   c(GDP_main_pe, GDP_main_pe, GDP_main_pe, GDP_main_pe),
"deaths" =  c(deaths_main_pe, deaths_main_pe, deaths_alt2_pe, deaths_main_pe),
"impairments" = c(impairments_main_pe, impairments_alt1_pe, impairments_alt2_pe, impairments_main_pe),
"mentalhealth" = c(mentalhealth_main_pe, mentalhealth_main_pe, mentalhealth_main_pe, mentalhealth_alt3_pe),
"total" = c(total_main_pe, total_alt1_pe, total_alt2_pe, total_alt3_pe),
"household" = c(household_main_pe, household_alt1_pe, household_alt2_pe, household_alt3_pe),
"propGDP" = c(GDPprop_main_pe, GDPprop_alt1_pe, GDPprop_alt2_pe, GDPprop_alt3_pe),
row.names = c("main", "alt1", "alt2", "alt3"))
# scale down for readability
results_table$GDP = results_table$GDP/1000000000
results_table$deaths = results_table$deaths/1000000000
results_table$impairments = results_table$impairments/1000000000
results_table$mentalhealth = results_table$mentalhealth/1000000000
results_table$total = results_table$total/1000000000
kable(results_table,
caption = "Table Caption",
digits=2,
col.names = c("Lost GDP",
"Premature death",
"Long term health impairment",
"Mental health impairment",
"Total",
"Total for a family of 4",
"Percent of annual GDP")) %>%
kable_styling("striped", full_width = F)
kable(results_table,
caption = "Table Caption",
digits=2,
row.names = c("Main",
"Alternative 1",
"Alternative 2",
"Alternative 3")
col.names = c("Lost GDP",
"Premature death",
"Long term health impairment",
"Mental health impairment",
"Total",
"Total for a family of 4",
"Percent of annual GDP")) %>%
kable_styling("striped", full_width = F)
kable(results_table,
caption = "Table Caption",
digits=2,
row.names = c("Main",
"Alternative 1",
"Alternative 2",
"Alternative 3"),
col.names = c("Lost GDP",
"Premature death",
"Long term health impairment",
"Mental health impairment",
"Total",
"Total for a family of 4",
"Percent of annual GDP")) %>%
kable_styling("striped", full_width = F)
results_table <- data.frame("GDP" =   c(GDP_main_pe, GDP_main_pe, GDP_main_pe, GDP_main_pe),
"deaths" =  c(deaths_main_pe, deaths_main_pe, deaths_alt2_pe, deaths_main_pe),
"impairments" = c(impairments_main_pe, impairments_alt1_pe, impairments_alt2_pe, impairments_main_pe),
"mentalhealth" = c(mentalhealth_main_pe, mentalhealth_main_pe, mentalhealth_main_pe, mentalhealth_alt3_pe),
"total" = c(total_main_pe, total_alt1_pe, total_alt2_pe, total_alt3_pe),
"household" = c(household_main_pe, household_alt1_pe, household_alt2_pe, household_alt3_pe),
"propGDP" = c(GDPprop_main_pe, GDPprop_alt1_pe, GDPprop_alt2_pe, GDPprop_alt3_pe),
row.names = c("Main","Alternative 1","Alternative 2","Alternative 3"))
# scale down for readability
results_table$GDP = results_table$GDP/1000000000
results_table$deaths = results_table$deaths/1000000000
results_table$impairments = results_table$impairments/1000000000
results_table$mentalhealth = results_table$mentalhealth/1000000000
results_table$total = results_table$total/1000000000
kable(results_table,
caption = "Table Caption",
digits=2,
col.names = c("Lost GDP",
"Premature death",
"Long term health impairment",
"Mental health impairment",
"Total",
"Total for a family of 4",
"Percent of annual GDP")) %>%
kable_styling("striped", full_width = F)
# open table output
png("results/results_fig.png")
# build table
kable(results_table,
caption = "Table Caption",
digits=2,
col.names = c("Lost GDP",
"Premature death",
"Long term health impairment",
"Mental health impairment",
"Total",
"Total for a family of 4",
"Percent of annual GDP")) %>%
kable_styling("striped", full_width = F)
dev.off()
kable_as_image(results_kable,
"results/results_fig.png")
as_image(results_kable,
"results/results_fig.png")
# build table
results_kable <- kable(results_table,
caption = "Table Caption",
digits=2,
col.names = c("Lost GDP",
"Premature death",
"Long term health impairment",
"Mental health impairment",
"Total",
"Total for a family of 4",
"Percent of annual GDP")) %>%
kable_styling("striped", full_width = F)
as_image(results_kable,
"results/results_fig.png")
save_kable(results_kable,
"results/results_fig.png")
webshot::install_phantomjs()
save_kable(results_kable,
"results/results_fig.png")
install.packages('magick')
save_kable(results_kable,
"results/results_fig.png")
# Cleaning for "The COVID-19 Pandemic and the $16 Trillion Virus" by Cutler and Summers
# @author: petezh
#######
# SETUP
#######
# loading required libraries
list.of.packages <- c("tidyverse", "readxl", "here")
new.packages <- list.of.packages[!(list.of.packages %in% installed.packages()[,"Package"])]
if(length(new.packages)) install.packages(new.packages, repos= "https://cran.r-project.org/")
lapply(list.of.packages, library, character.only = TRUE)
setwd(here())
######
# GDP
######
Year = c(2019:2030)
# raw jan 2020 projection
jan_df <- read_excel("data/raw/cbo-2020-01-economicprojections.xlsx", sheet = "2. Calendar Year")
# clean data
Pre.Covid <- tail(as.numeric(jan_df[12,]), 12)
# raw jun 2020 projection
jul_df <- read_excel("data/raw/cbo-2020-07-economicprojections.xlsx", sheet = "2. Calendar Year")
# clean data
Post.Covid <- tail(as.numeric(jul_df[12,]), 12)
# write to csv
write.csv(data.frame(Year, Pre.Covid, Post.Covid), "data/analysis/projections.csv", row.names=FALSE)
#############
# COVID DEATHS
#############
# raw jan 2020 projection
covid_data <- read.csv('data/raw/covid19-death-counts.csv')
# subset
clean_data <- subset(covid_data, State == 'United States' & Group == 'By Week',
select=c(COVID.19.Deaths, End.Date))
# write to csv
write.csv(clean_data, 'data/analysis/covid_deaths.csv', row.names=FALSE)
######
# MENTAL HEALTH
######
# read 2019 data
mhdata_2019 <- read.csv('data/raw/2019nchsmentalhealth.csv')
mhdata_2019$Time.Period = rep('2019', times=3)
# rename column
mhdata_2019 <- mhdata_2019 %>% rename(Indicator = Selected.mental.health.indicator)
# read 2020 data
mhdata_2020 <- read.csv('data/raw/2020pulsementalhealth.csv')
# subset
mhdata_2020 <- subset(mhdata_2020, Time.Period == 12 & Subgroup == 'United States',
select=c(Time.Period.Label, Value, Low.CI, High.CI, Indicator))
# rename column
mhdata_2020 <- mhdata_2020  %>% rename(Time.Period = Time.Period.Label)
# combine and write to csv
write.csv(rbind(mhdata_2019, mhdata_2020), 'data/analysis/mental_health.csv', row.names=FALSE)
############
# IMPAIRMENTS
############
# covid deaths by age
covid_age <- read.csv('data/raw/covid_by_age.csv')
# combine <1, 1-4, and 5-14
covid_age[3,2] <- sum(covid_age[1:3, 2])
covid_age <-tail(covid_age, -2)
# covid deaths by age, updated
covid_age_new <- read.csv('data/raw/Provisional_COVID-19_Death_Counts_by_Sex__Age__and_Week.csv')
# subset to december
covid_age_new <- subset(covid_age_new, Sex == 'All Sex' & MMWR.Week == 53,
select=c(Age.Group, COVID.19.Deaths))
# get new counts
covid_age_new[4,2] = sum(covid_age_new[2:4, 2])
covid_age_new <- tail(covid_age_new, -3)
# rename column
covid_age_new <- covid_age_new %>% rename(New.COVID.19.Deaths = COVID.19.Deaths)
# covasim model
covasim <- read.csv('data/raw/covasim.csv')
# calculate impairment:death ratio
covasim$Ratio = (covasim$Severse.Disease + covasim$Critical.Disease)/covasim$Death - 1
# combine
impairments <- cbind(covasim, covid_age, covid_age_new)
impairments$Impairments = impairments$COVID.Deaths * impairments$Ratio
impairments$Impairments.New = impairments$New.COVID.19.Deaths * impairments$Ratio
write.csv(impairments[c('Age', 'Impairments', 'Impairments.New')], 'data/analysis/impairments.csv', row.names=FALSE)
############
# POPULATION
############
# read ACS data
ACS <- read_excel('data/raw/2019gender_table1.xlsx', sheet='Age Sex')
# sum adult population
population <- sum(as.numeric(unlist(ACS[28:31,'...2'])))
population
